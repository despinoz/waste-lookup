# source: https://us1.prisma.sh/diego-espinoza-49c2d4/waste-lookup/dev
# timestamp: Mon Jan 21 2019 00:17:14 GMT-0500 (-05)

type AggregateWaste {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createWaste(data: WasteCreateInput!): Waste!
  updateWaste(data: WasteUpdateInput!, where: WasteWhereUniqueInput!): Waste
  deleteWaste(where: WasteWhereUniqueInput!): Waste
  upsertWaste(where: WasteWhereUniqueInput!, create: WasteCreateInput!, update: WasteUpdateInput!): Waste!
  updateManyWastes(data: WasteUpdateManyMutationInput!, where: WasteWhereInput): BatchPayload!
  deleteManyWastes(where: WasteWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  wastes(where: WasteWhereInput, orderBy: WasteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Waste]!
  waste(where: WasteWhereUniqueInput!): Waste
  wastesConnection(where: WasteWhereInput, orderBy: WasteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WasteConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  waste(where: WasteSubscriptionWhereInput): WasteSubscriptionPayload
}

type Waste implements Node {
  id: ID!
  body: String!
  category: String!
  title: String!
  keywords: String!
}

"""A connection to a list of items."""
type WasteConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [WasteEdge]!
  aggregate: AggregateWaste!
}

input WasteCreateInput {
  body: String!
  category: String!
  title: String!
  keywords: String!
}

"""An edge in a connection."""
type WasteEdge {
  """The item at the end of the edge."""
  node: Waste!

  """A cursor for use in pagination."""
  cursor: String!
}

enum WasteOrderByInput {
  id_ASC
  id_DESC
  body_ASC
  body_DESC
  category_ASC
  category_DESC
  title_ASC
  title_DESC
  keywords_ASC
  keywords_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type WastePreviousValues {
  id: ID!
  body: String!
  category: String!
  title: String!
  keywords: String!
}

type WasteSubscriptionPayload {
  mutation: MutationType!
  node: Waste
  updatedFields: [String!]
  previousValues: WastePreviousValues
}

input WasteSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [WasteSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [WasteSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WasteSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: WasteWhereInput
}

input WasteUpdateInput {
  body: String
  category: String
  title: String
  keywords: String
}

input WasteUpdateManyMutationInput {
  body: String
  category: String
  title: String
  keywords: String
}

input WasteWhereInput {
  """Logical AND on all given filters."""
  AND: [WasteWhereInput!]

  """Logical OR on all given filters."""
  OR: [WasteWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WasteWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  body: String

  """All values that are not equal to given value."""
  body_not: String

  """All values that are contained in given list."""
  body_in: [String!]

  """All values that are not contained in given list."""
  body_not_in: [String!]

  """All values less than the given value."""
  body_lt: String

  """All values less than or equal the given value."""
  body_lte: String

  """All values greater than the given value."""
  body_gt: String

  """All values greater than or equal the given value."""
  body_gte: String

  """All values containing the given string."""
  body_contains: String

  """All values not containing the given string."""
  body_not_contains: String

  """All values starting with the given string."""
  body_starts_with: String

  """All values not starting with the given string."""
  body_not_starts_with: String

  """All values ending with the given string."""
  body_ends_with: String

  """All values not ending with the given string."""
  body_not_ends_with: String
  category: String

  """All values that are not equal to given value."""
  category_not: String

  """All values that are contained in given list."""
  category_in: [String!]

  """All values that are not contained in given list."""
  category_not_in: [String!]

  """All values less than the given value."""
  category_lt: String

  """All values less than or equal the given value."""
  category_lte: String

  """All values greater than the given value."""
  category_gt: String

  """All values greater than or equal the given value."""
  category_gte: String

  """All values containing the given string."""
  category_contains: String

  """All values not containing the given string."""
  category_not_contains: String

  """All values starting with the given string."""
  category_starts_with: String

  """All values not starting with the given string."""
  category_not_starts_with: String

  """All values ending with the given string."""
  category_ends_with: String

  """All values not ending with the given string."""
  category_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  keywords: String

  """All values that are not equal to given value."""
  keywords_not: String

  """All values that are contained in given list."""
  keywords_in: [String!]

  """All values that are not contained in given list."""
  keywords_not_in: [String!]

  """All values less than the given value."""
  keywords_lt: String

  """All values less than or equal the given value."""
  keywords_lte: String

  """All values greater than the given value."""
  keywords_gt: String

  """All values greater than or equal the given value."""
  keywords_gte: String

  """All values containing the given string."""
  keywords_contains: String

  """All values not containing the given string."""
  keywords_not_contains: String

  """All values starting with the given string."""
  keywords_starts_with: String

  """All values not starting with the given string."""
  keywords_not_starts_with: String

  """All values ending with the given string."""
  keywords_ends_with: String

  """All values not ending with the given string."""
  keywords_not_ends_with: String
}

input WasteWhereUniqueInput {
  id: ID
}
